## This file only describes the Aqua Special Edition of the vChewing Input Method.

$ Main contributors and volunteers of this repository (vChewing for macOS):

- Shiki Suen // Main developer of vChewing for macOS, Megrez language engine, Hotenka Chinese Converter, Tadokoro Candidate Window, and Tekkon syllable composer engine.
- Hiraku Wang // Technical reinforcement in Cocoa during the Object-Cpp dev period of this project.
- Isaac Xen // Technical reinforcement in Swift: SFX Module (NSSound ver.) and StringView Ranges Extension.

$ 3rd-Party Modules Used:

- LineReader: (c) 2019 and onwards Robert Muckle-Jones (Apache 2.0 License).
- SwiftUI Preferences UI Framework: (c) 2018 and onwards Sindre Sorhus (MIT License).
- SwiftUI VDKComboBox: (c) 2022 and onwards Bryan Jones (CC BY-SA 4.0)
- Note that Hotenka Chinese Converter is rewritten by Shiki Suen (using Swift) from Nick Chen's Objective-C library "NCChineseConverter" (MIT License).

$ Contributors and volunteers of the upstream repo, having no responsibility in discussing anything in the current repo:

- Mengjuei Hsieh:
    - McBopomofo for macOS 1.x main developer and architect.
    - App-style installer (only preserved for developer purposes) // Only the part of the Objective-C version of the isAppBundleTranslocated().

Although there is no Lukhnos's Objective-C / C++ codes left in the current repository, we still credit him for his previous work:

- Lukhnos Liu:
    - App-style installer (only preserved for developer purposes).
    - Developer of Gramambular 2 language engine (removed since vChewing 1.5.4).
        - Shiki Suen's Megrez engine (MIT License) is basically a Swift-rewritten version of Gramambular 2 with further development.
    - Developer of Mandarin syllable composer (removed since vChewing 1.5.7).
        - Shiki Suen's Tekkon engine is made from scratch and has no relationship to Mandarin syllable composer.
    - Developer of the original C++ version of the User Override Module MK2.
        - Shiki Suen is trying to rewrite this module in Swift (and CSharp) with further development.

$ Special thanks to:

- Pan93412 and Ryan Wu in promotion of this project.
- All supporters of this project.
